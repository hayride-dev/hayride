name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Add Linux targets
        run: |
          rustup target add x86_64-unknown-linux-gnu

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl \
            libcurl4-openssl-dev \
            gcc-x86-64-linux-gnu \
            g++-x86-64-linux-gnu

      - name: Build x86_64 Linux binary
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Package binary
        run: |
          mkdir -p dist
          BIN=hayride
          OUTFILE="${BIN}-x86_64-unknown-linux-gnu"
          cp target/x86_64-unknown-linux-gnu/release/$BIN $OUTFILE
          chmod +x $OUTFILE
          tar -cJvf dist/${OUTFILE}.tar.xz $OUTFILE

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
            name: release-binaries-${{ matrix.target }}
            path: dist/*.tar.xz

  macos-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add macOS targets
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: Build x86_64 macOS binary
        run: cargo build --release --target x86_64-apple-darwin

      - name: Build arm64 macOS binary
        run: cargo build --release --target aarch64-apple-darwin

      - name: Package binaries
        run: |
          mkdir -p dist
          BIN=hayride

          for TARGET in x86_64-apple-darwin aarch64-apple-darwin; do
            OUTFILE="${BIN}-${TARGET}"
            cp target/$TARGET/release/$BIN $OUTFILE
            chmod +x $OUTFILE
            tar -cJvf dist/${OUTFILE}.tar.xz $OUTFILE
          done

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries-x86_64-apple-darwin
          path: dist/hayride-x86_64-apple-darwin.tar.xz

      - uses: actions/upload-artifact@v4
        with:
          name: release-binaries-aarch64-apple-darwin
          path: dist/hayride-aarch64-apple-darwin.tar.xz

  release:
    needs: [linux-build, macos-build]
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from tag
        id: get_version
        run: echo "RELEASE_VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Create output dir
        run: mkdir -p dist

      # Download artifacts for each target
      - uses: actions/download-artifact@v4
        with:
          name: release-binaries-x86_64-unknown-linux-gnu
          path: temp/linux
      - uses: actions/download-artifact@v4
        with:
          name: release-binaries-x86_64-apple-darwin
          path: temp/macos
      - uses: actions/download-artifact@v4
        with:
          name: release-binaries-aarch64-apple-darwin
          path: temp/macos-arm

      - name: Rename files to include version
        run: |
          BIN=hayride
          VERSION=${{ env.RELEASE_VERSION }}

          for file in $(find temp -name "*.tar.xz"); do
            base=$(basename "$file")
            target=$(echo "$base" | sed -E "s/^${BIN}-([a-z0-9_\-]+)\.tar\.xz$/\1/")
            cp "$file" "dist/${BIN}-${VERSION}-${target}.tar.xz"
          done

      - uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
